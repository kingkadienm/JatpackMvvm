plugins {
    id 'component.modules'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

static def releaseTime() {
    return new Date().format("yyyy-MM-dd", TimeZone.getTimeZone("UTC"))
}

android {
    def versions = rootProject.ext.versions
    compileSdk versions.compileSdkVersion
    defaultConfig {
        applicationId versions.applicationId
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode versions.versionCode
        versionName versions.versionName
        multiDexEnabled true
        ndk {
            abiFilters 'armeabi-v7a'
        }
        sourceSets {
            main {
                jniLibs.srcDirs = ['libs']
                java.srcDirs = ['src/main/java']
            }
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
            }
        }
    }


    signingConfigs {
        release {
            storeFile file(rootProject.ext.apksign.storeFile)
            storePassword rootProject.ext.apksign.storePassword
            keyAlias rootProject.ext.apksign.keyAlias
            keyPassword rootProject.ext.apksign.keyPassword

            v1SigningEnabled true
            v2SigningEnabled false
        }

        debug {
            storeFile file(rootProject.ext.apksign.storeFile)
            storePassword rootProject.ext.apksign.storePassword
            keyAlias rootProject.ext.apksign.keyAlias
            keyPassword rootProject.ext.apksign.keyPassword

            v1SigningEnabled true
            v2SigningEnabled true
        }
    }
    //输出打包文件
    applicationVariants.all { variant ->
        variant.outputs.all {
            if (outputFileName.endsWith('.apk')) {
                if ("debug".equalsIgnoreCase(variant.buildType.name)) {
                    outputFileName = "mvvm${defaultConfig.versionName}_dev_${defaultConfig.versionCode}_${releaseTime()}.apk"
                } else if ("release".equalsIgnoreCase(variant.buildType.name)) {
                    outputFileName = "mvvm${defaultConfig.versionName}_prod_${defaultConfig.versionCode}_${releaseTime()}.apk"
                }
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), "$rootDir/config/proguard-rules.pro"
            signingConfig signingConfigs.release
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    buildFeatures {
        dataBinding true
    }
}

dependencies {
    implementation(libs.androidx.appcompat)


    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    api project(path: ':app_core:core')

    implementation "androidx.multidex:multidex:2.0.1"

    // bugly sdk
    implementation 'com.tencent.bugly:crashreport:latest.release'
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'

    api 'com.alibaba:arouter-api:1.5.2'
    kapt 'com.alibaba:arouter-compiler:1.5.2'
//    implementation "junit:junit:4.13.2"
//    implementation "androidx.test:runner:1.5.2"
//    implementation 'androidx.test.ext:junit:1.1.5'
//    implementation 'androidx.test.espresso:espresso-core:3.5.1'
}